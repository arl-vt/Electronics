/* %%%%%%%%%%%%  PWM  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 * ------------Blink RED LEd and generate PWM on PF0 on LaunchPAd - TM4C123
 * */
#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"

#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "driverlib/debug.h"
#include "driverlib/pwm.h"
#include "driverlib/pin_map.h"
#include "inc/hw_gpio.h"
#include "driverlib/rom.h"

#define USER_LED  GPIO_PIN_1

int main(void)
{
//	int period = 400;
//	int duty = 300;
//
//    // Setup the system clock to run at 50 Mhz from PLL with crystal reference
//    SysCtlClockSet(SYSCTL_SYSDIV_4|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|
//                    SYSCTL_OSC_MAIN);
//
//    SysCtlPWMClockSet(SYSCTL_PWMDIV_64); //Use default clock tied to the module

	 uint32_t period = 5000; //20ms (16Mhz / 64pwm_divider / 50)
	    uint32_t duty = 250;    //1.5ms pulse width : 5%

	    //Set the clock 16 MHZ
	   SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC |   SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);

	   //Configure PWM Clock divide system clock by 64 - 0.25 MHz or 250 KHz
	   SysCtlPWMClockSet(SYSCTL_PWMDIV_64);
    // Enable and wait for the port to be ready for access
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM1);
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_PWM1))
    {
    }

    //Unlock PF0 for use as PWM output
    	HWREG(GPIO_PORTF_BASE + GPIO_O_LOCK) = GPIO_LOCK_KEY;
    	HWREG(GPIO_PORTF_BASE+GPIO_O_CR) |= 0x01;

//   // Configure pins to be used as PWM
    GPIOPinConfigure(GPIO_PF0_M1PWM4); //ties one of the 4 outputs of PWM module 1 to PF0
    // Configure the GPIO port for the LED operation.
    GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, USER_LED);

    //Sets functionality of GPIO pin within the module
    GPIOPinTypePWM(GPIO_PORTD_BASE, GPIO_PIN_0);

    // Configuring PWM
    /* Configure PWM generator(creates pulses) on the module. PWM1_BASE is the base module used.
     * GEN_2 is for pin 4,5 and GEN_# is for pin 6,7. MODE_DOWN create sawtooth wave while MODE_UP
     * creates triangular waves. */
    PWMGenConfigure(PWM1_BASE, PWM_GEN_2, PWM_GEN_MODE_DOWN|PWM_GEN_MODE_NO_SYNC);

    /* Set period of PWM output. EG period = 500 means 500 clock ticks.*/
    PWMGenPeriodSet(PWM1_BASE, PWM_GEN_2, period);

    /* Set the duty cycle. PWM_OUT_4 is the pwm output number 4 which is attached to PF0 in this case */
    PWMPulseWidthSet(PWM1_BASE, PWM_OUT_4, duty);

    while(1)
    {

        // Turn on the LED
        GPIOPinWrite(GPIO_PORTF_BASE, USER_LED, USER_LED);

        // Delay for a bit
        SysCtlDelay(2000000);

        // Turn on the LED
        GPIOPinWrite(GPIO_PORTF_BASE, USER_LED, ~(USER_LED));

        // Delay for a bit
        SysCtlDelay(2000000);
    }
}
