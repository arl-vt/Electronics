/*
 * *****************************************************************************************
 *                   Control DC Motor - tm4C123											   *
 * *****************************************************************************************
 *  Servo Driver: Advanced Motion AZBDC12A8
 *  			  6A continous, 12A Peak; 20-80V DC input
 *  			  PWM & Direction pin
 *
 *  Input PWM Frequecy: 10-25 KHZ
 *
 *  Pin Connections:
 *  PWM - PB6 (M0PWM0)
 *  DIRECTION - PB7
 *  *****************************************************************************************
 */

#include "driverlib/pin_map.h"
#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_gpio.h"
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/pin_map.h"
#include "driverlib/gpio.h"
#include "driverlib/pwm.h"

#define MotorPWM GPIO_PIN_1
#define MotorDirection GPIO_PIN_7

void delayMS(int ms) {
    SysCtlDelay( (SysCtlClockGet()/(3*1000))*ms ) ;
}

int main(void)
{
    uint32_t period = 3120; //20ms (clock / pwm_divider / 50)
    uint32_t duty = 250;    //1.5ms pulse width : 5%
 //   	int i;

    /* System Clock: Set the clock 16 MHZ */
   SysCtlClockSet(SYSCTL_SYSDIV_16 | SYSCTL_USE_OSC |  SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);

//   /* PWM clock by 64 - 15.6 KHZ */
//   SysCtlPWMClockSet(SYSCTL_PWMDIV_64);
//
//   /* Enable Peripherlas - PWM*/
//   SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB); // For direction pin on PB7
//   SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM0); // Module 0 for PB6
//
//   /* Configure PWM */
//    //Configure PF1 and PD0 as PWM
//   GPIOPinConfigure(GPIO_PB6_M0PWM0);
//   GPIOPinTypePWM(GPIO_PORTB_BASE,GPIO_PIN_6);
//
//
//    //Configure PWM Options
//    //PWM_GEN_2 Covers M1PWM5
//    //PWM_GEN_3 Covers M1PWM6
//    PWMGenConfigure(PWM0_BASE, PWM_GEN_2, PWM_GEN_MODE_DOWN | PWM_GEN_MODE_NO_SYNC);
//
//    //Set the Period (expressed in clock ticks)
//    PWMGenPeriodSet(PWM0_BASE, PWM_GEN_2, period);
//
//    //Set PWM duty
//    PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0,duty);
//
//    // Enable the PWM generator
//    PWMGenEnable(PWM0_BASE, PWM_GEN_2);
//
//    // Turn on the Output pins
//    PWMOutputState(PWM0_BASE, PWM_OUT_0_BIT, true);

    /*Enable Peripheral Direction pin*/
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOB)){}

    GPIOPinTypeGPIOOutput(GPIO_PORTB_BASE, MotorDirection);

    while(1)
    {
    	//Turn On Motor
    	GPIOPinWrite(GPIO_PORTB_BASE, MotorDirection, MotorDirection);

//    	for (i = 0; i<period; i++){
//    		duty = i;
//    		PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0,duty);
//    		delayMS(2);
//    	}
//
//    	i = 0;
    }
}
